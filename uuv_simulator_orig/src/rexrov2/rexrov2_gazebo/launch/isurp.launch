<launch>
    <arg name="record" default="false" doc="Set this flag to true to call record.launch"/>
    <arg name="bag_filename" default="recording.bag" doc="Name of the output ROS bag file in case record is set to true"/>
    <arg name="use_ned_frame" default="false" doc="If true, uses the NED (North-East-Down) frame conversion. If false, ENU (East-North-Up) will be used per default."/>

    <!-- Vehicle's initial position -->
    <arg name="x" default="0" doc="X coordinate of the vehicle's initial position (in ENU)"/>
    <arg name="y" default="0" doc="Y coordinate of the vehicle's initial position (in ENU)"/>
    <arg name="z" default="-5" doc="Z coordinate of the vehicle's initial position (in ENU)"/>
    <arg name="yaw" default="0" doc="Yaw angle of the vehicle's initial orientation"/>

    <!-- <arg name="teleop_on" default="false" doc="If true, the teleop node will be started"/>
    <arg name="joy_id" default="0" doc="Joystick ID"/> -->

    <include file="$(find uuv_gazebo_worlds)/launch/sample_world.launch"/>

    <!-- <include file="$(find rexrov2_description)/launch/underwater_world.launch"/> -->


    <include file="$(find uuv_simulation_wrapper)/launch/unpause_simulation.launch">
        <arg name="timeout" value="5"/>
    </include>

    <include file="$(find rexrov2_description)/launch/upload_rexrov2.launch">
        <arg name="x" value="$(arg x)"/>
        <arg name="y" value="$(arg y)"/>
        <arg name="z" value="$(arg z)"/>
        <arg name="yaw" value="$(arg yaw)"/>
        <arg name="use_ned_frame" value="$(arg use_ned_frame)"/>
    </include>



<!--    <node pkg="rexrov2_gazebo" type="isurp.py" name="isurp" output="screen">
        <param name="my_param" value="42"/>
        <arg name="my_arg" value="hello"/> 
    </node> -->

<!--     <include file="$(find rexrov2_control)/launch/start_pid_controller.launch">
        <arg name="teleop_on" value="$(arg teleop_on)"/>
        <arg name="joy_id" value="$(arg joy_id)"/>
        <arg name="use_ned_frame" value="$(arg use_ned_frame)"/>
    </include> -->
<!-- 
    <include file="$(find rexrov2_gazebo)/launch/record.launch">
      <arg name="record" value="$(arg record)"/>
      <arg name="bag_filename" value="$(arg bag_filename)"/>
    </include> -->



    <!-- <arg name="uuv_name" default="rexrov2" doc="Namespace of the vehicle to be controller"/>


    <arg name="gui_on" default="true" doc="Start Gazebo client and RViz"/>

    <arg name="Kp" default="1000,1000,1000,1000,1000,1000" doc="Coefficients for the $K_p$ diagonal matrix"/>
    <arg name="Kd" default="100,100,100,100,100,100" doc="Coefficients for the $K_d$ diagonal matrix"/>
    
    <arg name="teleop_on" default="false" doc="Start joystick teleop node"/>
    <arg name="joy_id" default="0" doc="ID of the joystick device"/>
    <arg name="axis_yaw" default="0" doc="Joystick mapping for yaw angle input"/>
    <arg name="axis_x" default="4" doc="Joystick mapping for X component of velocity reference input"/>
    <arg name="axis_y" default="3" doc="Joystick mapping for Y component of velocity reference input"/>
    <arg name="axis_z" default="1" doc="Joystick mapping for Z component of velocity reference input"/> -->

    <!-- Thruster manager configuration -->
    <!-- <arg name="thruster_manager_output_dir" default="$(find rexrov2_control)/config" doc="Output directory for the generated thruster manager"/>
    <arg name="thruster_manager_config_file" default="$(find rexrov2_control)/config/thruster_manager.yaml" doc="File storing the configuration of the thruster manager"/>
    <arg name="tam_file" default="$(find rexrov2_control)/config/TAM.yaml" doc="File storing the thruster allocation matrix"/> -->

    <!-- Vehicle parameter for the controller -->
    <!-- <arg name="model_params_file" default="$(find rexrov2_control)/config/model_params.yaml" doc="File storing the vehicle model parameters loaded by the controller"/>

    <include file="$(find uuv_trajectory_control)/launch/rov_pd_grav_compensation_controller.launch">
      <arg name="uuv_name" value="$(arg uuv_name)"/>
      <arg name="gui_on" value="$(arg gui_on)"/>
      <arg name="saturation" value="2000"/>
      <arg name="Kp" value="$(arg Kp)"/>
      <arg name="Kd" value="$(arg Kd)"/>
      <arg name="use_ned_frame" value="$(arg use_ned_frame)"/>
      <arg name="thruster_manager_output_dir" value="$(arg thruster_manager_output_dir)"/>
      <arg name="thruster_manager_config_file" value="$(arg thruster_manager_config_file)"/>
      <arg name="tam_file" value="$(arg tam_file)"/>
      <arg name="model_params_file" value="$(arg model_params_file)"/>
    </include> -->

    <!-- Initialize the recording fo the simulation according to the record flag  -->
<!--     <include file="$(find rexrov2_control)/launch/record_demo.launch">
      <arg name="record" value="$(arg record)"/>
      <arg name="use_ned_frame" value="$(arg use_ned_frame)"/>
      <arg name="uuv_name" value="$(arg uuv_name)"/>
    </include> -->

    <!-- <group if="$(arg teleop_on)"> -->
      <!-- Start joystick teleop node  -->
      <!-- <include file="$(find uuv_teleop)/launch/uuv_teleop.launch">
          <arg name="uuv_name" value="$(arg uuv_name)"/>
          <arg name="joy_id" value="$(arg joy_id)"/>
          <arg name="output_topic" value="cmd_vel"/>
          <arg name="message_type" value="twist"/>
          <arg name="axis_yaw" value="$(arg axis_yaw)"/>
          <arg name="axis_x" value="$(arg axis_x)"/>
          <arg name="axis_y" value="$(arg axis_y)"/>
          <arg name="axis_z" value="$(arg axis_z)"/>
          <arg name="gain_yaw" default="0.2"/>
          <arg name="gain_x" default="0.5"/>
          <arg name="gain_y" default="0.5"/>
          <arg name="gain_z" default="0.5"/>
      </include>
    </group> -->
<!-- 
    <group if="$(arg gui_on)">
      <node name="rviz" pkg="rviz" type="rviz" output="screen" args="-d $(find rexrov2_control)/rviz/rexrov2_control.rviz"/>
    </group> -->



</launch>